## Path:           SAP/Note/1680803 - SAP ASE (Sybase) settings - best practice
## Description:    Tune SAP ASE
## ServiceRestart: tuned

# IO nr_requests
NRREQ=1024

# memlock for user sybase
# Default: 0 (which means calculation: RAM in KB - 10%)
MEMLOCK=0

# kernel.shmmni
# The value is the maximum number of shared memory identifies available in the
# system.
# kernel.shmmni is set to the SHMMNI value from this file
# kernel.shmmni should be set to 32768 (see bsc#874778)
# bsc#874778
SHMMNI=32768


# from SAP-Note 1410736
# The tcp_keepalive_time option will determine how long an inactive established
# connection will be maintained.
# The default value is 7200 seconds which is quite large and the server might
# end up running off resources if there are just too many requests coming in.
# It would be good to reduce it to much lower value.
# The tcp_keepalive_intvl parameter allows you to control the interval you want
# to send the keep alive probe.
# By default in SLES this interval period is every 75 seconds which is very high
# as it would be more than 4 minutes for your server to see the connection has
# failed.
# net.ipv4.tcp_keepalive_time
KEEPALIVETIME=300
# net.ipv4.tcp_keepalive_intvl
KEEPALIVEINTVL=300

# maximum number of asynchronous I/Os.
# fs.aio-max-nr
AIOMAXNR=1048576

# Increase system file descriptor limit
# fs.file-max
FILEMAX=6291456

# Increase Linux autotuning TCP buffer limits
# Linux kernel allocates socket for every network connection that takes place.
# The socket are two ends of communication channel, every socket has a receive
# and send buffer which is also known as receive and write buffer. As these
# buffers get full, it does not accept any more data. As a result no new data
# can be processed and packets tend to get dropped.
# You may benefit from changing the values of
# net.core.rmem_max, net.core.wmem_max
# net.core.rmem_default, net.core.wmem_default
# Set max to 16MB (16777216) for 1GE and 32M (33554432) or 54M (56623104) for 10GE
# Don't set tcp_mem itself! Let the kernel scale it based on RAM.
RMEMMAX=16777216
WMEMMAX=16777216
RMEMDEF=16777216
WMEMDEF=16777216

# Increase the max packet backlog
# net.core.netdev_max_backlog
NETDEVMAXBACKLOG=30000

# If the server is a heavily used application server, e.g. a Database, it would
# benefit significantly by using Huge Pages.
# The default size of Huge Page in SLES is 2 MB, enabling Huge Pages would aid
# in significant improvements for Memory Intensive Applications/Databases,
# HPC Machines, this configuration needs to be done if the Applications support
# Huge Pages. If the Applications do not support Huge Pages then configuring
# Huge Pages would result in wastage of memory as it cannot be used any further
# by the OS, by Default no huge pages are allocated.
# When enabled, kernel parameter "vm.nr_hugepages" will be raised to 128.
NUMBER_HUGEPAGES=128
